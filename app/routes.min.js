
var crypto=require('crypto');var nodemailer=require('nodemailer');var bcrypt=require('bcrypt-nodejs');var csv=require('express-csv')
var transporter=nodemailer.createTransport({host:'mail.sunseap.com',name:'mail.sunseap.com',ignoreTLS:true,secure:false,port:'25',auth:{user:'billing@sunseap.com',pass:'sunseap123'}});var email_header='
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta name="viewport" content="width=device-width" />

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Sunseap Enterprise Leasing</title>
  
<link rel="stylesheet" type="text/css" href="http://localhost:3000/css/email.css" />

</head>
 
<body bgcolor="#FFFFFF">

<!-- HEADER -->
<table class="head-wrap" bgcolor="#ffffff">
  <tr>
    <td></td>
    <td class="header container" >
        
        <div class="content">
        <table bgcolor="#ffffff">
          <tr class="border_bottom">
            <td ><img src="http://localhost:3000/img/sunseap_logo_trans.jpg" height="50px"></td>
            <td align="right"><h3 class="collapse">Sunseap Enterprise Leasing</h3></td>
          </tr>
        </table>
        </div>
        
    </td>
    <td></td>
  </tr>
</table><!-- /HEADER -->


<!-- BODY -->
<table class="body-wrap">
  <tr>
    <td></td>
    <td class="container" bgcolor="#ffffff">

      <div class="content">
      <table>
        <tr>
          <td> <!-- start content -->

'
var fs=require('fs');var PDF=require('pdfkit');
var moment=require('moment');var mysql=require('mysql');var dbconfig=require('../config/database');
var pool=mysql.createPool(dbconfig.connection);pool.getConnection(function(err,connection){if(err){console.log(err);return;}
var sql='USE '+dbconfig.database;connection.query(sql,[],function(err,results){connection.release(); if(err){console.log(err);return;}});});
module.exports=function(app,passport,io){
io.on('connection',function(socket){socket.emit('news',{hello:'world'});socket.on('my other event',function(data){console.log(data);});});app.get('/',function(req,res){res.render('index.ejs');}); app.get('/login',function(req,res){ res.render('login.ejs',{message:req.flash('loginMessage')});}); app.post('/login',passport.authenticate('local-login',{successRedirect:'/profile', failureRedirect:'/login', failureFlash:true
}),function(req,res){if(req.body.remember){req.session.cookie.maxAge=1000*60*3;}else{req.session.cookie.expires=false;}
res.redirect('/');});app.get('/signup',function(req,res){ res.render('signup.ejs',{message:req.flash('signupMessage')});}); app.post('/signup',passport.authenticate('local-signup',{successRedirect:'/profile', failureRedirect:'/signup', failureFlash:true
})); app.get('/createuser/:accountname',isLoggedIn,function(req,res){res.render('createuser.ejs',{message:''});}); app.post('/createuser',isLoggedIn,function(req,res,next){pool.getConnection(function(err,connection){if(err){console.log(err);return;} 
var insertQuery="INSERT INTO f_accounts ( username, roleid, accountid  ) values (?,?,?)";connection.query(insertQuery,[req.body.username,req.body.roleid,req.body.accountid],function(err,rows){ var insertQuery="INSERT INTO users ( username, password, email ) values (?,?,?)";connection.query(insertQuery,[req.body.username,bcrypt.hashSync(req.body.password,null,null),req.body.email],function(err,rows){if(err){connection.release();req.flash('createMessage','User Already Exists.');res.render('createuser.ejs',{message:req.flash('createMessage')});}else{connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release();req.flash('createMessage','User Account Created.');res.render('createuser.ejs',{message:req.flash('createMessage')});});}});});});});app.get('/edituser/:accountname/:username',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select * from f_accounts fa left join d_roles dr on fa.roleid = dr.roleid left join d_accounts da on fa.accountid = da.accountid where fa.username = ? and da.accountname = ?",[req.params.username,req.params.accountname],function(err,rows){connection.query("select roleid from f_accounts where username= ?",[req.user.username],function(err,role){connection.release();res.render('edituser.ejs',{username:req.params.username, myrole:role[0].roleid,accountname:req.params.accountname,user:rows,message:''});});});});});app.post('/edituser/:accountname/:username',isLoggedIn,function(req,res){if(req.body.submit=="edit"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
var sql="UPDATE f_accounts fa left join d_accounts da on fa.accountid = da.accountid set roleid = ? WHERE fa.username = ? and da.accountname = ?";connection.query(sql,[req.body.roleid,req.params.username,req.params.accountname],function(err,rows){if(err){console.log(err);return;}
connection.release();
res.redirect('/viewuser/'+req.params.accountname+'');});});}else if(req.body.submit=="delete"){


 var sql="DELETE fa, u, fg, du from f_accounts fa left join users u on fa.username = u.username \
                   left join f_groups_access fg on fa.username = fg.username left join d_user_profile du on du.username = fa.username where fa.username = ?";pool.getConnection(function(err,connection){connection.query(sql,[req.body.username],function(err,rows){if(err){console.log(err);return;}
connection.release(); res.redirect('/viewuser/'+req.params.accountname+'');});});}}); app.get('/request',function(req,res){ res.render('request.ejs',{});});app.post('/requestuser',function(req,res){transporter.sendMail({from:'alert@sunseap.com',to:'alert@sunseap.com',subject:'Sunseap Enterprise Leasing Account Request',html:'<img src="http://localhost:3000/img/sunseap_logo_trans.jpg"> <h3>Sunseap Enterprise Leasing</h3> <hr><br><br> An account was requested by'+req.body.username+' from '+req.body.email+' about Account: '+req.body.account});res.redirect('/');}); app.get('/resetpassword',function(req,res){ res.render('resetpassword.ejs',{message:''});});app.post('/resetpassword',function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT * FROM users WHERE email = ?",[req.body.email],function(err,rows){if(rows.length){crypto.randomBytes(48,function(ex,buf){var token=buf.toString('hex');transporter.sendMail({from:'alert@sunseap.com',to:req.body.email,subject:'Sunseap Password Reset',html:'<img src="http://localhost:3000/img/sunseap_logo_trans.jpg"> Sunseap Enterprise Leasing <br><br> You recently requested to reset your password. Please <a href="http://130.211.243.86:3000/changepassword/'+token+'">click here</a> to reset your password. If this request was not from you, please ignore this e-mail. <br><br><br> - Sunseap Enterprise Leasing'});var insertQuery="INSERT INTO resetpass (email, token) values (?,?)";connection.query(insertQuery,[req.body.email,token],function(err,rows){connection.release();});});req.flash('resetMessage','An e-mail was sent to your inbox.');res.render('resetpassword.ejs',{message:req.flash('resetMessage')});}else{connection.release(); req.flash('resetMessage','That e-mail does not exist in our records.');res.render('resetpassword.ejs',{message:req.flash('resetMessage')});}});});}); app.get('/changepassword/:token',function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT users.username, users.email, resetpass.token FROM resetpass  join users on resetpass.email = users.email WHERE token = ?",[req.params.token],function(err,rows){connection.release(); if(rows.length){res.render('changepassword.ejs',{message:req.flash('changeMessage'),token:req.params.token,email:rows[0].email,user:rows[0].username});}else{req.flash('changeMessage','Sorry, this request has expired. Please reset again.');res.render('changepassword.ejs',{message:req.flash('changeMessage'),token:req.params.token,email:null,user:null});}});});});app.post('/changepassword',function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT * FROM resetpass WHERE token = ?",[req.body.token],function(err,rows){if(rows.length){var removeQuery="DELETE from resetpass where email = ?";connection.query(removeQuery,[rows[0].email],function(err,rows){connection.release();});var changeQuery="UPDATE users set password = ? where username = ?";bcrypt.hash(req.body.password,null,null,function(err,hash){connection.query(changeQuery,[hash,req.body.username],function(err,rows){connection.release();});req.flash('changeMessage','Password has been successfully changed.');res.render('changepassword.ejs',{message:req.flash('changeMessage'),token:rows[0].token,email:rows[0].email,user:req.body.username});});}else{connection.release(); req.flash('changeMessage','Sorry, this request has expired. Please reset again.');res.render('changepassword.ejs',{message:req.flash('changeMessage'),token:rows[0].token,email:null,user:req.body.username});}});});});
app.get('/profile',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select roleid from f_accounts fa where fa.username = ?",req.user.username,function(err,role){if(role[0].roleid==0){accountquery="SELECT fa.username,da.accountid,da.accountname,dr.roleid, dr.rolename FROM f_accounts as fa left join d_accounts as da on 1 = 1 left join d_roles as dr on fa.roleid = dr.roleid where fa.username = ?"}else{accountquery="SELECT fa.username,da.accountid,da.accountname,dr.roleid, dr.rolename FROM f_accounts as fa left join d_accounts as da on fa.accountid = da.accountid left join d_roles as dr on fa.roleid = dr.roleid where fa.username = ?"}
connection.query(accountquery,req.user.username,function(err,accounts){ connection.query("select * from f_groups_access as fga left join d_groups as dg on dg.groupid = fga.groupid where fga.username = ? order by groupname ",req.user.username,function(err,groups){connection.query("SELECT username,firstname,lastname,phone,address,city,postal,emailnotify,smsnotify FROM d_user_profile WHERE username = ?",req.user.username,function(err,profile){connection.query("select timestamp,fal.accountid,fal.username,fal.announcement,da.accountname from f_alerts as fal left join d_accounts as da on da.accountid = fal.accountid left join f_accounts as fa on fa.accountid = da.accountid where fal.accountid = 0 or (fa.username = ?) order by timestamp desc limit 5",[req.user.username],function(err,alerts){connection.query("SELECT fa.username,fa.roleid,fa.accountid,fas.assetid, da.assetname FROM f_accounts as fa left join f_asset as fas on fas.accountid = fa.accountid left join d_asset da on fas.assetid = da.assetid WHERE fa.username = ? ",[req.user.username],function(err,assets){connection.release();
if(profile==undefined||!profile.length){app.locals({user:req.user,accounts:accounts,groups:groups,assets:assets,profile:'',appmessage:''});req.flash('message','<b>Welcome!</b> You haven\'t updated your contact information. Please update it <b><a href=\'/editprofile\'>here</a></b>');res.render('profile.ejs',{user:req.user, accounts:accounts,groups:groups,assets:assets,profile:'',alerts:alerts,message:req.flash('message')});}else{app.locals({user:req.user,accounts:accounts,groups:groups,assets:assets,profile:profile});res.render('profile.ejs',{user:req.user, accounts:accounts,groups:groups,assets:assets,profile:profile,alerts:alerts,message:''});}});});});});});});});}); app.get('/editprofile',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT du.firstname,du.lastname,du.phone,du.address,du.city,du.postal,du.emailnotify,du.smsnotify from d_user_profile as du  WHERE du.username = ?",[req.user.username],function(err,rows){if(err){console.log(err);return;}
connection.release();if(rows){ res.render('editprofile.ejs',{user:rows,message:''});}else{res.render('editprofile.ejs',{user:'',message:''});}});});});app.post('/editprofile',isLoggedIn,function(req,res,next){ pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select * from d_user_profile where username = ? ",req.user.username,function(err,rows){ if(!!rows.length){ console.log('update row');var insertQuery="UPDATE d_user_profile SET firstname = ?,lastname = ?,phone = ?,address = ?,city = ?,postal = ?,emailnotify = ?,smsnotify = ? where username = ?";}else{ console.log('insert row');var insertQuery="INSERT into d_user_profile (firstname,lastname,phone,address,city,postal,emailnotify,smsnotify, username) values (?,?,?,?,?,?,?,?,?)";}
connection.query(insertQuery,[req.body.firstname,req.body.lastname,req.body.phone,req.body.address,req.body.city,req.body.postal,req.body.emailnotify,req.body.smsnotify,req.user.username],function(err,rows){if(err){console.log(err);connection.query("SELECT du.firstname,du.lastname,du.phone,du.address,du.city,du.postal,du.emailnotify,du.smsnotify from d_user_profile as du  WHERE du.username = ?",[req.user.username],function(err,rows){connection.release(); req.flash('message','There was an error. Please try again.');res.render('editprofile.ejs',{user:rows,message:req.flash('message')});});}else{connection.query("SELECT du.firstname,du.lastname,du.phone,du.address,du.city,du.postal,du.emailnotify,du.smsnotify from d_user_profile as du  WHERE du.username = ?",[req.user.username],function(err,rows){connection.release(); req.flash('message','Profile updated.');res.render('editprofile.ejs',{user:rows,message:req.flash('message')});});}});});});}); app.get('/viewuser/:accountname',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT  users.username, users.email, d_roles.rolename, d_accounts.accountname,du.firstname,du.lastname,du.phone,du.address,du.city,du.postal,du.emailnotify,du.smsnotify FROM f_accounts left join d_accounts on f_accounts.accountid = d_accounts.accountid left join d_roles on f_accounts.roleid = d_roles.roleid left join users on f_accounts.username = users.username left join d_user_profile as du on du.username = f_accounts.username WHERE d_accounts.accountname = ?",[req.params.accountname],function(err,rows){connection.release(); res.render('viewuser.ejs',{accountname:req.params.accountname, users:rows});});});}); app.get('/viewuser/export/users_:accountname',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT users.username, users.email, d_roles.rolename, d_accounts.accountname,du.firstname,du.lastname,du.phone,du.address,du.city,du.postal,du.emailnotify,du.smsnotify FROM f_accounts left join d_accounts on f_accounts.accountid = d_accounts.accountid left join d_roles on f_accounts.roleid = d_roles.roleid left join users on f_accounts.username = users.username left join d_user_profile as du on du.username = f_accounts.username WHERE d_accounts.accountname = ?",[req.params.accountname],function(err,rows){connection.release(); var headers={};for(key in rows[0]){headers[key]=key;}
rows.unshift(headers);res.csv(rows);});});}); app.get('/creategroup',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,fa.accountid,dac.accountname from f_asset fa left join d_asset da on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid ",[],function(err,rows){if(err){console.log(err);return;}
connection.release(); res.render('creategroup.ejs',{user:req.user, assets:rows,message:''});});});}); app.post('/creategroup',isLoggedIn,function(req,res,next){console.log(req.body.assetid)
pool.getConnection(function(err,connection){if(err){console.log(err);return;} 
connection.query("SELECT groupname from d_groups where groupname = ?",req.body.groupname,function(err,group){if(err){console.log(err);return;}
if(!!group.length){
 req.flash('message','This group ('+req.body.groupname+') already exists.');res.render('creategroup.ejs',{user:req.user,message:req.flash('message')});}else{
 
var insertQuery="INSERT INTO d_groups ( groupname, description, blockno, unitno,street,postcode,remarks ) values (?,?,?,?,?,?,?)";connection.query(insertQuery,[req.body.groupname,req.body.description,req.body.blockno,req.body.unitno,req.body.street,req.body.postcode,req.body.remarks],function(err,rows){if(err){console.log(err);return;} 
connection.query("SELECT groupid, groupname from d_groups where groupname = ?",req.body.groupname,function(err,groupid){if(err){console.log(err);return;} 
var insertQuery="INSERT INTO f_groups_access (groupid, username, notes) values (?,?,?)";connection.query(insertQuery,[groupid[0].groupid,req.user.username,'creator'],function(err,rows){var fgroup=[];req.body.assetid.forEach(function(err,index){fgroup[index]=[groupid[0].groupid,req.body.accountid,req.body.assetid[index]]})
console.log(fgroup); connection.query("INSERT INTO f_groups (groupid, accountid, assetid) values ?",[fgroup],function(err,rows){connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,fa.accountid,dac.accountname from f_asset fa left join d_asset da on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid ",[],function(err,rows){if(err){console.log(err);connection.release(); req.flash('message','There is a problem with your request. Please try again.');res.render('creategroup.ejs',{user:req.user,assets:rows,message:req.flash('message')});}else{connection.release(); req.flash('message','Group added successfully.');res.render('creategroup.ejs',{user:req.user,assets:rows,message:req.flash('message')});}});});});});});}});});});
app.get('/account/:accountname',isLoggedIn,function(req,res){var startdate=moment(new Date()).subtract(20,'d').format("YYYY-MM-DD 00:00:00");var enddate=moment(new Date()).add(1,'d').format("YYYY-MM-DD 00:00:00");pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select m.ClientFK, m.MeterNo, m.TimeStamp, m.TotalActiveDemand_3P, m.TotalReactiveDemand_3P, m.PhaseVoltage_L1, m.PhaseCurrent_I3, \
                       m.PhaseVoltage_L2, m.PhaseVoltage_L3, m.LineVoltage_L12, m.LineVoltage_L31, m.LineVoltage_L23, m.PhaseCurrent_I1, m.PhaseCurrent_I2, \
                       m.TotalApparentPower_3P, m.TotalActivePower_3P, m.TotalReactivePower_3P, m.PhasePowerFactor_3P, m.SystemFrequency, m.Energy_Total, \
                       (PhaseVoltage_L1*PhaseCurrent_I1 + PhaseVoltage_L2*PhaseCurrent_I2 + PhaseVoltage_L2*PhaseCurrent_I2)/1000*PhasePowerFactor_3P/10 as Energy_Importing_Calc, \
                       m.Energy_Importing, m.Energy_Exporting, da.assetname, da.assetid from MeterLog m left join d_asset da on da.assetid = m.MeterNo \
                       left join f_asset fa on fa.assetid = da.assetid left join d_accounts dac on dac.accountid = fa.accountid \
                       WHERE dac.accountname = ? and m.TimeStamp between ? and ? order by m.TimeStamp desc ",[req.params.accountname,startdate,enddate],function(err,rows){connection.query("select fa.assetid, da.assetname, da.street, da.postcode, da.remarks, da.lat, da.lng, dac.accountid, dac.accountname from f_asset fa \
                      left join d_asset da on fa.assetid = da.assetid left join d_accounts dac on fa.accountid = dac.accountid where dac.accountname = ?",req.params.accountname,function(err,assets){connection.query("select DAY(m.timestamp) as day,Month(m.timestamp) as month, Year(m.timestamp) as year, \
                          m.Energy_Importing, m.Energy_Exporting from MeterLog m left join d_asset da on da.assetid = m.MeterNo \
                          left join f_asset fa on fa.assetid = da.assetid left join d_accounts dac on dac.accountid = fa.accountid \
                          WHERE dac.accountname = ? and m.Timestamp between ? and ? \
                          group by year, month, day order by m.TimeStamp asc",[req.params.accountname,startdate,enddate],function(err,sum){console.log(sum);var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();res.render('account.ejs',{moment:moment,data:rows,sum:sum,header:headers,accountname:req.params.accountname,assets:assets,start:startdate,end:enddate,message:''});});});});});});app.post('/account/:accountname',isLoggedIn,function(req,res){var startdate=moment(req.body.start,'DD/MM/YYYY').format("YYYY-MM-DD 00:00:00");var enddate=moment(req.body.end,'DD/MM/YYYY').format("YYYY-MM-DD 00:00:00");if(req.body.submit=="export"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select * from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ? and MeterLog.TimeStamp between ? and ? order by MeterLog.TimeStamp",[req.params.assetid,startdate,enddate],function(err,rows){var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();rows.unshift(headers);res.csv(rows);});});}else if(req.body.submit=="update"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select m.ClientFK, m.MeterNo, m.TimeStamp, m.TotalActiveDemand_3P, m.TotalReactiveDemand_3P, m.PhaseVoltage_L1, m.PhaseCurrent_I3, \
                       m.PhaseVoltage_L2, m.PhaseVoltage_L3, m.LineVoltage_L12, m.LineVoltage_L31, m.LineVoltage_L23, m.PhaseCurrent_I1, m.PhaseCurrent_I2, \
                       m.TotalApparentPower_3P, m.TotalActivePower_3P, m.TotalReactivePower_3P, m.PhasePowerFactor_3P, m.SystemFrequency, m.Energy_Total, \
                       (PhaseVoltage_L1*PhaseCurrent_I1 + PhaseVoltage_L2*PhaseCurrent_I2 + PhaseVoltage_L2*PhaseCurrent_I2)/1000*PhasePowerFactor_3P/10 as Energy_Importing_Calc, \
                       m.Energy_Importing, m.Energy_Exporting, da.assetname, da.assetid from MeterLog m left join d_asset da on da.assetid = m.MeterNo \
                       left join f_asset fa on fa.assetid = da.assetid left join d_accounts dac on dac.accountid = fa.accountid \
                       WHERE dac.accountname = ? and m.TimeStamp between ? and ? order by m.TimeStamp desc ",[req.params.accountname,startdate,enddate],function(err,rows){connection.query("select fa.assetid, da.assetname, da.street, da.postcode, da.remarks, da.lat, da.lng, dac.accountid, dac.accountname from f_asset fa \
                      left join d_asset da on fa.assetid = da.assetid left join d_accounts dac on fa.accountid = dac.accountid where dac.accountname = ?",req.params.accountname,function(err,assets){connection.query("select DAY(m.timestamp) as day,Month(m.timestamp) as month, Year(m.timestamp) as year, \
                          m.Energy_Importing, m.Energy_Exporting from MeterLog m left join d_asset da on da.assetid = m.MeterNo \
                          left join f_asset fa on fa.assetid = da.assetid left join d_accounts dac on dac.accountid = fa.accountid \
                          WHERE dac.accountname = ? and m.Timestamp between ? and ? \
                          group by year, month, day order by m.TimeStamp asc",[req.params.accountname,startdate,enddate],function(err,sum){var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();res.render('account.ejs',{moment:moment,sum:sum,data:rows,header:headers,accountname:req.params.accountname,assets:assets,start:req.body.start,end:req.body.end,message:''});});});});});}else if(req.body.submit=="report"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select MeterLog.Energy_Total, (MeterLog.PhaseVoltage_L1*MeterLog.PhaseCurrent_I1 + MeterLog.PhaseVoltage_L2*MeterLog.PhaseCurrent_I2 + MeterLog.PhaseVoltage_L2*MeterLog.PhaseCurrent_I2)/1000 as Energy_Importing, MeterLog.Energy_Exporting,MeterLog.TimeStamp, d_asset.assetid, d_asset.assetname from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ?  and MeterLog.TimeStamp between ? and ? order by MeterLog.TimeStamp desc",[req.params.assetid,startdate,enddate],function(err,rows){var energy_gen=0;rows.forEach(function(err,index){energy_gen=energy_gen+rows[index].Energy_Importing;});var current_tariff=0.2329;var grid_charge=0.15;var sp_rate=0.2329;var discount=0.12;var headline='Tax Invoice';var business='SUNSEAP LEASING PTE LTD';var address1='18 Boon Lay Way #06-135';var address2='Singapore 609966';var address3='General Enquiries: +65 67954465';var address4='www.sunseap-leasing.com';var address5='Co. Registration No.: '+'201107952W';var address6='GST Reg No. '+'201107952W';var location='Blk 214 Jurong East St 21, Singapore 600214';var text2='Energy Generation for this Period: '+Math.round(req.body.sum_impt*1000)/1000+' kWh';var dates='Generated between '+req.body.start+' and '+req.body.end;doc=new PDF({size:'A4'});res.writeHead(200,{'Content-Type':'application/pdf','Access-Control-Allow-Origin':'*','Content-Disposition':'attachment; filename=Report.pdf'}); doc.font('Helvetica-Bold');doc.fontSize(13);doc.text(headline,260,30); doc.image('public/img/sunseap_logo_trans.jpg',30,70,{width:50});doc.font('Helvetica');doc.fontSize(10);doc.text(business,95,70);doc.text(address1,95,85);doc.text(address2,95,100);doc.text(address3,95,115);doc.text(address4,95,130);
doc.image(req.body.daily_img,40,410);
doc.text(text2,40,410);doc.rect(30,180,400,250);doc.rect(30,450,400,280);doc.stroke();doc.scale(0.7).translate(40,220);doc.path(req.body.svgimg).stroke();doc.translate(0,420);doc.path(req.body.svgimg2).stroke();doc.path(req.body.svgimg3).stroke();doc.addPage({margin:50,size:'A4'})
 
doc.font('Helvetica-Bold');doc.fontSize(13);doc.text(headline,260,30); doc.image('public/img/sunseap_logo_trans.jpg',30,70,{width:50});doc.fontSize(8);doc.text(business,95,70);doc.font('Helvetica');doc.text(address1,95,85);doc.text(address2,95,100);doc.text(address3,95,115);doc.text(address4,95,130);doc.text(address5,95,145);doc.text(address6,95,160);
 doc.fontSize(8);var bill=moment(new Date()).format('MMM YYYY')+' Bill';var dated='Dated '+moment(new Date()).format('DD MMM YYYY');doc.font('Helvetica-Bold');doc.text(bill,390,70);doc.text(dated,450,70);doc.moveTo(350,85).lineTo(545,85).stroke();doc.font('Helvetica');doc.text('Invoice Number: '+'0001',400,100);doc.text('Type: '+'xxxxxx',400,115);doc.text('Account No: '+'Solar 0001',400,130);doc.text('Jurong Town Council',400,145);doc.text('BLK 255 Jurong East St 24 #01-303',400,160);doc.text('This is your tax invoice for: ',400,190); doc.text('BLK 214 Jurong East St 21',400,205);doc.text('Singapore 600214',400,220); doc.rect(30,200,300,115);doc.rect(250,200,80,115);doc.rect(30,200,300,15);doc.rect(250,200,80,15);doc.rect(30,295,300,20);doc.stroke(); doc.text('SUMMARY OF CHARGES '+req.body.start+' to '+req.body.end,35,205);doc.text('Amount ($)',265,205); doc.text('Balance B/F from Previous Bill',35,235);doc.text('Outstanding Balance',35,265);doc.text('Total Current Charges due on '+req.body.end,35,280);doc.font('Helvetica-Bold');doc.fontSize(10);doc.text('Total Amount Payable',35,300);doc.fontSize(8);doc.font('Helvetica');doc.text('Payment received on or after '+moment(req.body.end,'DD/MM/YYYY').add(1,'d').format('DD MMM YYYY')+' may not be included in this bill',30,345); doc.text('CURRENT MONTH CHARGES',40,385);doc.text('Electricity charges w/o Sunseap solar',255,380);doc.text('Electricity charges w/ Sunseap solar',415,380); doc.text('Electricity (kWh)',175,395);doc.text('Effective Rate ($)',255,395);doc.text('Amount ($)',335,395);doc.text('Effective Rate ($)',415,395);doc.text('Amount ($)',495,395); doc.rect(30,375,140,30); doc.rect(170,375,80,15); doc.rect(250,375,160,15); doc.rect(410,375,160,15);
 doc.rect(170,390,80,15); doc.rect(250,390,80,15); doc.rect(330,390,80,15); doc.rect(410,390,80,15); doc.rect(490,390,80,15);
 doc.rect(30,405,140,60); doc.rect(170,405,80,60); doc.rect(250,405,80,60); doc.rect(330,405,80,60); doc.rect(410,405,80,60); doc.rect(490,405,80,60);
doc.text('Reading taken on '+req.body.end,35,410);doc.text('Exported',40,440);doc.text('Usage',40,455);doc.text(Math.round(req.body.sum_impt*1000)/1000,175,440);doc.text(Math.round(req.body.sum_expt*1000)/1000,175,455); doc.text(current_tariff-grid_charge,255,440);doc.text((current_tariff),255,455); doc.text(Math.round(req.body.sum_impt*(current_tariff-grid_charge)*1000)/1000,335,440);doc.text(Math.round(req.body.sum_expt*(current_tariff)*1000)/1000,335,455); doc.text(current_tariff-grid_charge,415,440);doc.text(sp_rate*(1-discount),415,455); doc.text(current_tariff-grid_charge,415,440);doc.text(sp_rate*(1-discount),415,455); doc.text(Math.round(req.body.sum_impt*(current_tariff-grid_charge)*1000)/1000,495,440);doc.text(Math.round(req.body.sum_expt*(sp_rate*(1-discount))*1000)/1000,495,455); doc.rect(30,465,140,40); doc.rect(170,465,80,40); doc.rect(250,465,80,40); doc.rect(330,465,80,40); doc.rect(410,465,80,40); doc.rect(490,465,80,40);
doc.text('Total charges subjected to GST',35,470);doc.text('Goods & Services Tax',35,485); doc.rect(30,505,380,15); doc.rect(410,505,160,15); doc.stroke();var start_tax_date='1 January';var end_tax_date='31 Mar';doc.font('Helvetica-Bold');doc.fontSize(10);doc.text('From '+start_tax_date+' to '+end_tax_date+': ',30,540);doc.fontSize(8);doc.font('Helvetica');doc.text('Effective Export Rate = Current Tariff - Grid Charge = '+'current_tariff'+' - '+'grid_charge'+' = '+(current_tariff-grid_charge),30,555);doc.text('Effective Usage Rate = SP Rate x Discount Rate = '+'sp_rate'+' * '+'(1-discount)'+' = '+sp_rate*(1-discount),30,570);doc.text('Please make full payment by the due date to avoid late payment charges.',30,600);doc.text('Please visit www.sunseap-leasing.com for more information on our service and conditions of service.',30,615);doc.text('This bill services as a tax invoice for the collection of Solar Leasing Charges for SUNSEAP LEASING PTE LTD.',30,630);doc.text('for '+'SUNSEAP LEASING PTE LTD',30,660);doc.moveTo(30,700).lineTo(250,700).stroke();doc.moveTo(300,700).lineTo(500,700).stroke();doc.text('Authorised Signature',100,705);doc.text('Company Stamp',370,705);doc.pipe(res);


 doc.end();});});}}); app.get('/assigngroup/:accountname',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
var thisaccountid;var thisroleid;connection.query("select roleid from f_accounts fa where fa.username = ?",req.user.username,function(err,role){if(role[0].roleid==0){accountquery="SELECT fa.username,da.accountid,da.accountname,dr.roleid, dr.rolename FROM f_accounts as fa left join d_accounts as da on 1 = 1 left join d_roles as dr on fa.roleid = dr.roleid where fa.username = ?"}else{accountquery="SELECT fa.username,da.accountid,da.accountname,dr.roleid, dr.rolename FROM f_accounts as fa left join d_accounts as da on fa.accountid = da.accountid left join d_roles as dr on fa.roleid = dr.roleid where fa.username = ?"}
connection.query(accountquery,[req.user.username],function(err,accounts){accounts.forEach(function(err,index){if(accounts[index].accountname==req.params.accountname){thisaccountid=accounts[index].accountid;thisroleid=accounts[index].roleid;}}); 
if(thisroleid<2){var sql="SELECT distinct dg.groupid,dg.groupname from d_accounts da left join f_groups fg on fg.accountid = da.accountid left join d_groups dg on fg.groupid = dg.groupid where da.accountname = ?";connection.query(sql,[req.params.accountname],function(err,groups){ var sql2="SELECT fa.username, fa.roleid, dr.rolename, du.firstname, du.lastname  from f_accounts fa left join d_roles dr on dr.roleid = fa.roleid left join d_user_profile as du on fa.username = du.username  where fa.accountid = '?' order by username";connection.query(sql2,[thisaccountid],function(err,users){ var sql3="select groupid, username from f_groups_access";connection.query(sql3,[],function(err,useraccess){connection.release(); res.render('assigngroup.ejs',{accountname:req.params.accountname,users:users,access:useraccess,groups:groups,message:''});});});});}else{var sql="SELECT distinct dg.groupid,dg.groupname from d_accounts da left join f_groups fg on fg.accountid = da.accountid left join d_groups dg on fg.groupid = dg.groupid where da.accountname = ?";connection.query(sql,[req.params.accountname],function(err,groups){ var sql2="SELECT fa.username, fa.roleid, dr.rolename, du.firstname, du.lastname  from f_accounts fa left join d_roles dr on dr.roleid = fa.roleid left join d_user_profile as du on fa.username = du.username  where fa.accountid = '?' order by username";connection.query(sql2,[thisaccountid],function(err,users){var sql3="select groupid, username from f_groups_access";connection.query(sql3,[],function(err,useraccess){connection.release(); res.render('assigngroup.ejs',{accountname:req.params.accountname,users:users,access:useraccess,groups:groups,message:''});});});});}
});});});});app.post('/assigngroup',isLoggedIn,function(req,res,next){
 pool.getConnection(function(err,connection){if(err){console.log(err);return;}
console.log(req.body.groupid);console.log(req.body.username);console.log(moment(new Date()).format('YYYY-MM-DD'));if(req.body.act=='Add'){console.log('inside add');var insertQuery="INSERT f_groups_access (groupid,username,notes) VALUES (?,?,?)";connection.query(insertQuery,[req.body.groupid,req.body.username,moment(new Date()).format('YYYY-MM-DD')],function(err,rows){connection.release(); res.redirect('/assigngroup/'+req.body.accountname);});}else if(req.body.act=='Remove'){console.log('inside remove');var removeQuery="DELETE from f_groups_access where groupid = ? and username = ?";connection.query(removeQuery,[req.body.groupid,req.body.username],function(err,rows){connection.release(); res.redirect('/assigngroup/'+req.body.accountname);});}else{res.redirect('/assigngroup/'+req.body.accountname);}});}); app.get('/viewgroup/:accountname',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
if(req.params.groupid=='all'){connection.query("select dg.groupname,dg.groupid,da.assetname,da.assetid from f_groups fg left join d_groups dg on dg.groupid = fg.groupid left join f_groups_access fga on fga.groupid = fg.groupid left join d_asset da on da.assetid = fg.assetid where fga.username = ?",[req.user.username],function(err,rows){connection.release(); res.render('viewgroup.ejs',{username:req.user.username,groupid:req.params.groupid, groups:rows});});}else{connection.query("select dg.groupname,dg.groupid,da.assetname,da.assetid from f_groups fg left join d_groups dg on dg.groupid = fg.groupid left join f_groups_access fga on fga.groupid = fg.groupid left join d_asset da on da.assetid = fg.assetid left join f_asset fa on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid where accountname = ? and fga.username = ?",[req.params.accountname,req.user.username],function(err,rows){connection.release(); res.render('viewgroup.ejs',{username:req.user.username,groupid:req.params.groupid, groups:rows});});}
});}); app.get('/createasset',isLoggedIn,function(req,res){res.render('createasset.ejs',{message:''});}); app.post('/createasset',isLoggedIn,function(req,res,next){


 pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT assetid FROM d_asset WHERE assetid = ?",req.body.assetid,function(err,asset){if(!asset.length)
{var insertQuery="INSERT INTO d_asset ( assetid, assetname, blockno, unitno, street, postcode, remarks, lat, lng ) values (?,?,?,?,?,?,?,?,?)";connection.query(insertQuery,[req.body.assetid,req.body.assetname,req.body.blockno,req.body.unitno,req.body.street,req.body.postcode,req.body.remarks,req.body.lat,req.body.lng],function(err,rows){ var insertQuery="INSERT INTO f_asset ( assetid, accountid ) values (?,?)";connection.query(insertQuery,[req.body.assetid,req.body.accountid],function(err,rows){if(err){connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release(); req.flash('message','The meter could not be added. Try again.');res.render('createasset.ejs',{message:req.flash('message')});});}else{connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release(); req.flash('message','The meter was added.');res.render('createasset.ejs',{message:req.flash('message')});});}});});}else{connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release(); req.flash('message','Sorry, the meter has already been allocated.');res.render('createasset.ejs',{message:req.flash('message')});});}});});}); app.get('/editasset/:accountname/:assetid',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,fa.accountid,dac.accountname from f_asset fa left join d_asset da on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid WHERE dac.accountname = ?",[req.params.accountname],function(err,rows){connection.release();res.render('editasset.ejs',{accountname:req.params.accountname, assetid:req.params.assetid,assets:rows,message:''});});});});app.post('/editasset/:accountname/:assetid',isLoggedIn,function(req,res,next){ if(req.body.submit=="edit"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
var insertQuery="UPDATE d_asset da SET assetname = ?,blockno = ?, unitno= ?,street= ?,postcode= ?,remarks= ?,lat= ?,lng= ? where assetid = ?";connection.query(insertQuery,[req.body.assetname,req.body.blockno,req.body.unitno,req.body.street,req.body.postcode,req.body.remarks,req.body.lat,req.body.lng,req.body.assetid],function(err,rows){if(err){connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,fa.accountid,dac.accountname from f_asset fa left join d_asset da on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid WHERE dac.accountname = ?",[req.params.accountname],function(err,rows){connection.release(); req.flash('message','Sorry, something went wrong. Try again.');res.render('editasset.ejs',{accountname:req.params.accountname,assetid:req.params.assetid,assets:rows,message:req.flash('message')});});}else{connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,fa.accountid,dac.accountname from f_asset fa left join d_asset da on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid WHERE dac.accountname = ?",[req.params.accountname],function(err,rows){connection.release(); req.flash('message','Asset was updated.');res.render('editasset.ejs',{accountname:req.params.accountname,assetid:req.params.assetid,assets:rows,message:req.flash('message')});});}});});}
else if(req.body.submit=="delete"){

 var sql="DELETE da, fa, fg from d_asset da left join f_asset fa on fa.assetid = da.assetid \
                   left join f_groups fg on fa.assetid = fg.assetid  where fa.assetid = ?";pool.getConnection(function(err,connection){connection.query(sql,[req.body.assetid],function(err,rows){if(err){console.log(err);return;}
connection.release(); res.redirect('/viewasset/'+req.params.accountname+'');});});}}); app.get('/viewasset/:accountname',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,dac.accountid,dac.accountname from f_asset fa left join d_asset da on da.assetid = fa.assetid left join d_accounts dac on dac.accountid = fa.accountid WHERE dac.accountname = ?",[req.params.accountname],function(err,rows){connection.release();res.render('viewasset.ejs',{accountname:req.params.accountname, assets:rows});});});}); app.get('/viewasset/export/assets_:accountname',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select fa.assetid,da.assetname,da.blockno,da.unitno,da.street,da.postcode,da.remarks,da.lat,da.lng,dac.accountid,dac.accountname from f_asset fa left join d_asset da on d_asset.assetid = f_asset.assetid left join d_accounts dac on d_accounts.accountid = f_asset.accountid WHERE d_accounts.accountname = ?",[req.params.accountname],function(err,rows){connection.release();var headers={};for(key in rows[0]){headers[key]=key;}
rows.unshift(headers);res.csv(rows);});});}); app.get('/createevent',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA='"+dbconfig.database+"' AND TABLE_NAME='MeterLog';",function(err,cols){connection.release(); res.render('createevent.ejs',{user:req.user, metrics:cols,message:''});});});}); app.post('/createevent',isLoggedIn,function(req,res,next){


 pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("SELECT accountid FROM d_accounts WHERE accountname = ?",req.body.accountname,function(err,accountid){connection.query("SELECT assetid FROM d_asset WHERE assetid = ?",req.body.assetid,function(err,asset){if(!asset.length)
{var insertQuery="INSERT INTO d_asset ( assetid, assetname ) values (?,?)";connection.query(insertQuery,[req.body.assetid,req.body.assetname],function(err,rows){ var insertQuery="INSERT INTO f_asset ( assetid, accountid ) values (?,?)";connection.query(insertQuery,[req.body.assetid,accountid[0].accountid],function(err,rows){if(err){connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release(); req.flash('message','Sorry, something went wrong. Try again.');res.render('createevent.ejs',{user:req.user,accounts:rows,message:req.flash('message')});});}else{connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release(); req.flash('message','Asset was added.');res.render('createevent.ejs',{user:req.user,accounts:rows,message:req.flash('message')});});}});});}else{connection.query("SELECT * FROM f_accounts WHERE username = ?",req.user.username,function(err,rows){connection.release(); req.flash('message','Sorry, the asset has already been allocated.');res.render('createevent.ejs',{user:req.user, accounts:rows,message:req.flash('message')});});}});});});}); app.get('/viewdata/:assetid',isLoggedIn,function(req,res){var startdate=moment(new Date()).subtract(10,'d').format("YYYY-MM-DD 00:00:00");var enddate=moment(new Date()).add(1,'d').format("YYYY-MM-DD 00:00:00");pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select MeterLog.Energy_Total, (PhaseVoltage_L1*PhaseCurrent_I1 + PhaseVoltage_L2*PhaseCurrent_I2 + PhaseVoltage_L2*PhaseCurrent_I2)/1000 as Energy_Importing, MeterLog.Energy_Exporting,MeterLog.TimeStamp, d_asset.assetid, d_asset.assetname from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ? and MeterLog.TimeStamp between ? and ? order by MeterLog.TimeStamp desc",[req.params.assetid,startdate,enddate],function(err,rows){console.log(rows);console.log(startdate);console.log(enddate);var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();res.render('viewdata.ejs',{moment:moment,data:rows,header:headers,start:moment(new Date()).format('DD/MM/YYYY'),end:moment(new Date()).add(1,'d').format('DD/MM/YYYY'),message:''});});});});app.post('/viewdata/:assetid',isLoggedIn,function(req,res){var startdate=moment(req.body.start,'DD/MM/YYYY').format("YYYY-MM-DD 00:00:00");var enddate=moment(req.body.end,'DD/MM/YYYY').format("YYYY-MM-DD 00:00:00");if(req.body.submit=="export"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select * from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ? and MeterLog.TimeStamp between ? and ? order by MeterLog.TimeStamp",[req.params.assetid,startdate,enddate],function(err,rows){var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();rows.unshift(headers);res.csv(rows);});});}else if(req.body.submit=="update"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select MeterLog.Energy_Total, (MeterLog.PhaseVoltage_L1*MeterLog.PhaseCurrent_I1 + MeterLog.PhaseVoltage_L2*MeterLog.PhaseCurrent_I2 + MeterLog.PhaseVoltage_L2*MeterLog.PhaseCurrent_I2)/1000 as Energy_Importing, MeterLog.Energy_Exporting,MeterLog.TimeStamp, d_asset.assetid, d_asset.assetname from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ?  and MeterLog.TimeStamp between ? and ? order by MeterLog.TimeStamp desc",[req.params.assetid,startdate,enddate],function(err,rows){var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();res.render('viewdata.ejs',{moment:moment,data:rows,header:headers,start:req.body.start,end:req.body.end,message:''});});});}else if(req.body.submit=="report"){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select MeterLog.Energy_Total, (MeterLog.PhaseVoltage_L1*MeterLog.PhaseCurrent_I1 + MeterLog.PhaseVoltage_L2*MeterLog.PhaseCurrent_I2 + MeterLog.PhaseVoltage_L2*MeterLog.PhaseCurrent_I2)/1000 as Energy_Importing, MeterLog.Energy_Exporting,MeterLog.TimeStamp, d_asset.assetid, d_asset.assetname from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ?  and MeterLog.TimeStamp between ? and ? order by MeterLog.TimeStamp desc",[req.params.assetid,startdate,enddate],function(err,rows){var energy_gen=0;rows.forEach(function(err,index){energy_gen=energy_gen+rows[index].Energy_Importing;});var text='Sample Report';var text2='Energy Generation for this Period: '+Math.round(energy_gen*100)/100+' W';var dates='Generated between '+req.body.start+' and '+req.body.end;doc=new PDF({size:'A4'});res.writeHead(200,{'Content-Type':'application/pdf','Access-Control-Allow-Origin':'*','Content-Disposition':'attachment; filename=Report.pdf'});
doc.rect(30,100,535,250);doc.rect(30,400,535,50);doc.stroke();doc.image('public/img/cc_logo.png',15,15,{width:250});doc.fontSize(18);doc.text(text,400,30);doc.fontSize(12);doc.text(dates,30,70);doc.text(text2,40,420);doc.scale(0.7).translate(40,120);doc.path(req.body.svgimg).stroke();doc.pipe(res);


 doc.end();});});}}); app.get('/viewlivedata/:assetid',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select m.ClientFK, m.MeterNo, m.TimeStamp, m.TotalActiveDemand_3P, m.TotalReactiveDemand_3P, m.PhaseVoltage_L1, m.PhaseVoltage_L2, m.PhaseVoltage_L3, m.LineVoltage_L12, m.LineVoltage_L31, m.LineVoltage_L23, m.PhaseCurrent_I1, m.PhaseCurrent_I2, m.PhaseCurrent_I3, m.TotalApparentPower_3P, m.TotalActivePower_3P, m.TotalReactivePower_3P, m.PhasePowerFactor_3P, m.SystemFrequency, m.Energy_Total, (PhaseVoltage_L1*PhaseCurrent_I1 + PhaseVoltage_L2*PhaseCurrent_I2 + PhaseVoltage_L2*PhaseCurrent_I2)/1000 as Energy_Importing, m.Energy_Exporting, da.assetname, da.assetid from MeterLog m left join d_asset da  on da.assetid = m.MeterNo WHERE da.assetid = ? order by m.TimeStamp desc limit 1",[req.params.assetid],function(err,rows){var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();res.render('viewlivedata.ejs',{moment:moment,data:rows,header:headers});});});}); app.get('/viewdata/export/data_:assetid',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
connection.query("select MeterLog.Energy_Total, MeterLog.Energy_Importing, MeterLog.Energy_Exporting,MeterLog.TimeStamp, d_asset.assetid, d_asset.assetname from MeterLog left join d_asset on d_asset.assetid = MeterLog.MeterNo WHERE d_asset.assetid = ? order by MeterLog.TimeStamp",[req.params.assetid],function(err,rows){var headers={};for(key in rows[0]){headers[key]=key;}
connection.release();rows.unshift(headers);res.csv(rows);});});}); app.get('/viewdata/export/pdf/data_:assetid',isLoggedIn,function(req,res){pool.getConnection(function(err,connection){if(err){console.log(err);return;}
var text='test here file'+req.params.assetid;doc=new PDF({size:'A4'});res.writeHead(200,{'Content-Type':'application/pdf','Access-Control-Allow-Origin':'*','Content-Disposition':'attachment; filename='+req.params.assetid+'.pdf'});doc.rect(10,10,575,815);doc.rect(10,10,575,200);doc.stroke();doc.image('public/img/cc_logo.png',15,15,{width:250});doc.text(text,100,100);doc.pipe(res);


 doc.end();});});app.get('/logout',function(req,res){req.logout();res.redirect('/');});};function isLoggedIn(req,res,next){ if(req.isAuthenticated())
return next(); res.redirect('/');}